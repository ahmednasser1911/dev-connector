{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nasser\\\\Desktop\\\\fullstack-projects\\\\dev-connector\\\\client\\\\src\\\\components\\\\profile\\\\Profile.js\";\nimport React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport { getProfileById } from \"../../actions/profile\";\nimport ProfileTop from '../profile/ProfileTop';\nimport ProfileAbout from '../profile/ProfileAbout';\nimport { Link } from \"react-router-dom\";\n\nconst Profile = ({\n  getProfileById,\n  profile: {\n    loading,\n    profile\n  },\n  auth,\n  match\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById, match.params.id]);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, profile === null || loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/profiles\",\n    className: \"btn btn-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Back To Profile\"), auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id ? '' : React.createElement(Link, {\n    to: \"/edit-profile\",\n    className: \"btn btn-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Edit Profile\"), React.createElement(\"div\", {\n    class: \"profile-grid my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(ProfileTop, {\n    profile: profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(ProfileAbout, {\n    profile: profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    class: \"profile-exp bg-white p-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    class: \"text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Experience\"), profile.experience.length > 0 ? React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, profile.experience.map(exp => {\n    React.createElement(ProfileExperience, {\n      key: exp._id,\n      experience: exp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    });\n  })) : React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"No Experience Added\")))));\n};\n\nProfile.propTypes = {\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  getProfileById: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);","map":{"version":3,"sources":["C:/Users/Nasser/Desktop/fullstack-projects/dev-connector/client/src/components/profile/Profile.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getProfileById","ProfileTop","ProfileAbout","Link","Profile","profile","loading","auth","match","params","id","isAuthenticated","user","_id","experience","length","map","exp","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport { getProfileById } from \"../../actions/profile\";\r\nimport ProfileTop from '../profile/ProfileTop'\r\nimport ProfileAbout from '../profile/ProfileAbout'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Profile = ({\r\n  getProfileById,\r\n  profile: { loading, profile },\r\n  auth,\r\n  match\r\n}) => {\r\n  useEffect(() => {\r\n    getProfileById(match.params.id);\r\n  }, [getProfileById, match.params.id]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {profile === null || loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <Fragment>\r\n          <Link to=\"/profiles\" className=\"btn btn-light\">\r\n            Back To Profile\r\n          </Link>\r\n          {auth.isAuthenticated &&\r\n            auth.loading === false &&\r\n            auth.user._id === profile.user._id ? ('') : (\r\n                <Link to=\"/edit-profile\" className=\"btn btn-dark\">\r\n                    Edit Profile\r\n                </Link>\r\n            )}\r\n            <div class=\"profile-grid my-1\">\r\n              <ProfileTop profile = {profile}/>\r\n              <ProfileAbout profile = {profile}/>\r\n              <div class=\"profile-exp bg-white p-2\">\r\n              <h2 class=\"text-primary\">Experience</h2>\r\n                {profile.experience.length > 0 ? (<Fragment>\r\n                  {profile.experience.map(exp => {\r\n                    <ProfileExperience key = {exp._id} experience = {exp}/>\r\n                  })}\r\n                </Fragment>) : (<h4>No Experience Added</h4>)}\r\n              </div>\r\n            </div>\r\n            \r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  getProfileById: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile,\r\n  auth: state.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfileById })(Profile);\r\n"]},"metadata":{},"sourceType":"module"}