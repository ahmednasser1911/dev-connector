{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nasser\\\\Desktop\\\\fullstack-projects\\\\dev-connector\\\\client\\\\src\\\\components\\\\posts\\\\Posts.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { getPosts } from '../../actions/post';\nimport { connect } from \"react-redux\";\nimport PostItem from './PostItem';\nimport Spinner from '../layout/Spinner';\n\nconst Posts = ({\n  getPosts,\n  post: {\n    posts,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n  return loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Posts\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fa fa-user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), \" Welcome To The Commuinty\"));\n};\n\nPosts.propTypes = {\n  getPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getPosts\n})(Posts);","map":{"version":3,"sources":["C:/Users/Nasser/Desktop/fullstack-projects/dev-connector/client/src/components/posts/Posts.js"],"names":["React","Fragment","useEffect","PropTypes","getPosts","connect","PostItem","Spinner","Posts","post","posts","loading","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA2BC,SAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,QAAR,QAAuB,oBAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AACA,MAAMC,KAAK,GAAG,CAAC;AAACJ,EAAAA,QAAD;AAAYK,EAAAA,IAAI,EAAG;AAACC,IAAAA,KAAD;AAASC,IAAAA;AAAT;AAAnB,CAAD,KAA2C;AACrDT,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,QAAQ;AACX,GAFQ,EAEL,CAACA,QAAD,CAFK,CAAT;AAIA,SACIO,OAAO,GAAI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAJ,GACP,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAG,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAI,IAAA,SAAS,EAAG,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAG,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,8BAFJ,CAFJ;AAgBH,CArBD;;AAuBAH,KAAK,CAACI,SAAN,GAAkB;AACdR,EAAAA,QAAQ,EAAED,SAAS,CAACU,IAAV,CAAeC,UADX;AAEdL,EAAAA,IAAI,EAACN,SAAS,CAACY,MAAV,CAAiBD;AAFR,CAAlB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9BR,EAAAA,IAAI,EAAEQ,KAAK,CAACR;AADkB,CAAL,CAA7B;;AAGA,eAAeJ,OAAO,CAACW,eAAD,EAAmB;AAACZ,EAAAA;AAAD,CAAnB,CAAP,CAAsCI,KAAtC,CAAf","sourcesContent":["import React , {Fragment , useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {getPosts} from '../../actions/post'\r\nimport { connect } from \"react-redux\";\r\nimport PostItem from './PostItem';\r\nimport Spinner from '../layout/Spinner'\r\nconst Posts = ({getPosts , post : {posts , loading}}) => {\r\n    useEffect(() => {\r\n        getPosts()\r\n    } , [getPosts])\r\n\r\n    return (\r\n        loading ? (<Spinner />) : (\r\n        <Fragment>\r\n            <h1 className = \"large text-primary\">Posts</h1>\r\n            <p  className = 'lead'>\r\n                <i className = 'fa fa-user'/> Welcome To The Commuinty\r\n            </p>\r\n            {/* Posts Form \r\n            <div className = \"posts\">\r\n                {posts.map(post => (\r\n                    <PostItem key = {post.id} post = {post} />\r\n                ))}\r\n            </div>\r\n            */}\r\n        </Fragment>\r\n    ))\r\n}\r\n\r\nPosts.propTypes = {\r\n    getPosts: PropTypes.func.isRequired,\r\n    post:PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    post: state.post\r\n})\r\nexport default connect(mapStateToProps , {getPosts})(Posts)\r\n"]},"metadata":{},"sourceType":"module"}