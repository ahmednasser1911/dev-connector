{"ast":null,"code":"import { GET_POSTS, POST_ERROR, UPDATE_LIKES, DELETE_POST, ADD_POST } from './types';\nimport { setAlert } from './alert';\nimport axios from 'axios'; // get all posts\n\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/posts');\n    console.log(res.data);\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data // posts\n\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Like a post\n\nexport const addLike = postID => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/like/${postID}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        postID,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // UnLike a post\n\nexport const removeLike = postID => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/unlike/${postID}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        postID,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // remove post\n\nexport const deletePost = postID => async dispatch => {\n  try {\n    await axios.delete(`/api/posts/${postID}`);\n    dispatch({\n      type: DELETE_POST,\n      payload: postID\n    });\n    dispatch(setAlert('Post Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add a post\n\nexport const addPost = formData => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.post(`/api/posts`, formData, config);\n    dispatch({\n      type: ADD_POST,\n      payload: res.data\n    });\n    dispatch(setAlert('Post Uploaded', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Nasser/Desktop/fullstack-projects/dev-connector/client/src/actions/post.js"],"names":["GET_POSTS","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","setAlert","axios","getPosts","dispatch","res","get","console","log","data","type","payload","err","msg","response","statusText","status","addLike","postID","put","likes","removeLike","deletePost","delete","addPost","formData","config","headers","post"],"mappings":"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","sourcesContent":["import {\r\n    GET_POSTS,\r\n    POST_ERROR,\r\n    UPDATE_LIKES,\r\n    DELETE_POST,\r\n    ADD_POST\r\n} from './types';\r\nimport { setAlert } from './alert';\r\nimport axios from 'axios'\r\n\r\n// get all posts\r\nexport const getPosts = () => async dispatch => {\r\n    try {\r\n        const res = await axios.get('/api/posts')\r\n        console.log(res.data)\r\n        dispatch({\r\n            type: GET_POSTS,\r\n            payload: res.data // posts\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg :  err.response.statusText , status: err.response.status}\r\n        });\r\n    }\r\n}\r\n\r\n// Like a post\r\nexport const addLike = postID => async dispatch => {\r\n    try {\r\n        const res = await axios.put(`/api/posts/like/${postID}`)\r\n        dispatch({\r\n            type: UPDATE_LIKES,\r\n            payload: { postID , likes: res.data }\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg :  err.response.statusText , status: err.response.status}\r\n        });\r\n    }\r\n}\r\n\r\n// UnLike a post\r\nexport const removeLike = postID => async dispatch => {\r\n    try {\r\n        const res = await axios.put(`/api/posts/unlike/${postID}`)\r\n        dispatch({\r\n            type: UPDATE_LIKES,\r\n            payload: { postID , likes: res.data }\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg :  err.response.statusText , status: err.response.status}\r\n        });\r\n    }\r\n}\r\n\r\n// remove post\r\nexport const deletePost = postID => async dispatch => {\r\n    try {\r\n        await axios.delete(`/api/posts/${postID}`)\r\n        dispatch({\r\n            type: DELETE_POST,\r\n            payload: postID\r\n        })\r\n\r\n        dispatch(setAlert('Post Removed' , 'success'))\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg :  err.response.statusText , status: err.response.status}\r\n        });\r\n    }\r\n}\r\n\r\n// Add a post\r\nexport const addPost = formData => async dispatch => {\r\n    const config = {\r\n        headers : {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n    \r\n    try {\r\n        const res = await axios.post(`/api/posts`, formData , config)\r\n        dispatch({\r\n            type: ADD_POST,\r\n            payload: res.data\r\n        })\r\n        dispatch(setAlert('Post Uploaded' , 'success'))\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg :  err.response.statusText , status: err.response.status}\r\n        });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}