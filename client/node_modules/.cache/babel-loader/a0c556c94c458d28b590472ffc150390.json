{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nasser\\\\Desktop\\\\fullstack-projects\\\\dev-connector\\\\client\\\\src\\\\components\\\\dashboard\\\\Dashboard.js\";\nimport React, { useEffect, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getProfile } from '../../actions/profile';\nimport { Link } from 'react-router-dom';\nimport Spinner from '../layout/Spinner';\n\nconst Dashboard = ({\n  auth: {\n    user\n  },\n  getProfile,\n  profile: {\n    profile,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getProfile();\n  }, []);\n  return (// if loading is true then load the spinner\n    loading && profile === null ? React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }) : React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"large text-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"Dashboard\"), React.createElement(\"p\", {\n      className: \"lead\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }), \" Welcome \", user !== null ? user.name : 'No User'), profile !== null ? // if there is a profile\n    React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Profile\") : // if there is no profile\n    React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"You have no profile , please add some info\"), React.createElement(Link, {\n      to: \"/create-profile\",\n      className: \"btn btn-primary my-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Create Profile\")))\n  );\n};\n\nDashboard.propTypes = {\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired,\n  getProfile: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getProfile\n})(Dashboard);","map":{"version":3,"sources":["C:/Users/Nasser/Desktop/fullstack-projects/dev-connector/client/src/components/dashboard/Dashboard.js"],"names":["React","useEffect","Fragment","connect","PropTypes","getProfile","Link","Spinner","Dashboard","auth","user","profile","loading","name","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA4BC,QAA5B,QAA2C,OAA3C;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,UAAR,QAAyB,uBAAzB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,IAAI,EAAC;AAACC,IAAAA;AAAD,GAAN;AAAeL,EAAAA,UAAf;AAA4BM,EAAAA,OAAO,EAAC;AAACA,IAAAA,OAAD;AAAWC,IAAAA;AAAX;AAApC,CAAD,KAA8D;AAC5EX,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,UAAU;AACb,GAFQ,EAEL,EAFK,CAAT;AAIA,SACI;AACAO,IAAAA,OAAO,IAAID,OAAO,KAAK,IAAvB,GACC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAGA,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAG,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAG,MAAA,SAAS,EAAG,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,SAAS,EAAG,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAC4CD,IAAI,KAAI,IAAR,GAAeA,IAAI,CAACG,IAApB,GAA2B,SADvE,CAFJ,EAKKF,OAAO,KAAK,IAAZ,GACD;AACC,wBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFA,GAGD;AACC,wBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDADH,EAEG,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,iBAAT;AAA2B,MAAA,SAAS,EAAG,sBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFH,CATL;AALJ;AAwBH,CA7BD;;AA+BAH,SAAS,CAACM,SAAV,GAAsB;AAClBL,EAAAA,IAAI,EAAEL,SAAS,CAACW,MAAV,CAAiBC,UADL;AAElBL,EAAAA,OAAO,EAAEP,SAAS,CAACW,MAAV,CAAiBC,UAFR;AAGlBX,EAAAA,UAAU,EAAED,SAAS,CAACa,IAAV,CAAeD;AAHT,CAAtB;;AAMA,MAAME,eAAe,GAAGC,KAAK,KACzB;AACIV,EAAAA,IAAI,EAAEU,KAAK,CAACV,IADhB;AAEIE,EAAAA,OAAO,EAAEQ,KAAK,CAACR;AAFnB,CADyB,CAA7B;;AAOA,eAAeR,OAAO,CAACe,eAAD,EAAmB;AAACb,EAAAA;AAAD,CAAnB,CAAP,CAAwCG,SAAxC,CAAf","sourcesContent":["import React , {useEffect , Fragment} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {getProfile} from '../../actions/profile';\r\nimport { Link } from 'react-router-dom';\r\nimport Spinner from '../layout/Spinner';\r\n\r\nconst Dashboard = ({auth:{user} , getProfile , profile:{profile , loading}}) => {\r\n    useEffect(() => {\r\n        getProfile();\r\n    } , []);\r\n    \r\n    return (\r\n        // if loading is true then load the spinner\r\n        loading && profile === null ? \r\n        (<Spinner/>) : \r\n        (\r\n        <Fragment>\r\n            <h1 className = \"large text-primary\">Dashboard</h1>\r\n            <p className = \"lead\">\r\n                <i className = \"fa fa-user\" /> Welcome {user !==null ? user.name : 'No User'}\r\n            </p>\r\n            {profile !== null ? \r\n            // if there is a profile\r\n            (<Fragment>Profile</Fragment>) : \r\n            // if there is no profile\r\n            (<Fragment>\r\n                <p>You have no profile , please add some info</p>\r\n                <Link to=\"/create-profile\" className = \"btn btn-primary my-1\">\r\n                    Create Profile\r\n                </Link>\r\n            </Fragment>)\r\n            }\r\n        </Fragment> \r\n        )\r\n    )\r\n}\r\n\r\nDashboard.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    getProfile: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => (\r\n    {\r\n        auth: state.auth,\r\n        profile: state.profile\r\n    }\r\n)\r\n\r\nexport default connect(mapStateToProps , {getProfile})(Dashboard)\r\n\r\n"]},"metadata":{},"sourceType":"module"}