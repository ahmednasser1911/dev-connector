{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nasser\\\\Desktop\\\\fullstack-projects\\\\dev-connector\\\\client\\\\src\\\\components\\\\post\\\\Post.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport PostItem from '../posts/PostItem';\nimport CommentForm from '../post/CommentForm';\nimport { getPost } from '../../actions/post';\nimport { Link } from 'react-router-dom';\n\nconst Post = ({\n  getPost,\n  post: {\n    post,\n    loading\n  },\n  match\n}) => {\n  useEffect(() => {\n    getPost(match.params.id);\n  }, [getPost]);\n  return loading || post === null ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/posts\",\n    className: \"btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Back To Posts\"), React.createElement(PostItem, {\n    post: post,\n    showActions: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(CommentForm, {\n    postID: post._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }));\n};\n\nPost.propTypes = {\n  post: PropTypes.object.isRequired,\n  getPost: PropTypes.func.isRequired\n};\n\nconst mapStateToPorops = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToPorops, {\n  getPost\n})(Post);","map":{"version":3,"sources":["C:/Users/Nasser/Desktop/fullstack-projects/dev-connector/client/src/components/post/Post.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","PostItem","CommentForm","getPost","Link","Post","post","loading","match","params","id","_id","propTypes","object","isRequired","func","mapStateToPorops","state"],"mappings":";AAAA,OAAOA,KAAP,IAAiBC,QAAjB,EAA4BC,SAA5B,QAA4C,OAA5C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEF,EAAAA,OAAF;AAAYG,EAAAA,IAAI,EAAE;AAACA,IAAAA,IAAD;AAAQC,IAAAA;AAAR,GAAlB;AAAqCC,EAAAA;AAArC,CAAD,KAAkD;AAC3DX,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,OAAO,CAACK,KAAK,CAACC,MAAN,CAAaC,EAAd,CAAP;AACH,GAFQ,EAEL,CAACP,OAAD,CAFK,CAAT;AAGA,SAASI,OAAO,IAAID,IAAI,KAAK,IAApB,GAA2B,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA3B,GACL,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,QAAT;AAAkB,IAAA,SAAS,EAAC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAKI,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEA,IAAhB;AAAsB,IAAA,WAAW,EAAE,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAMI,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAEA,IAAI,CAACK,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADJ;AAUH,CAdD;;AAgBAN,IAAI,CAACO,SAAL,GAAiB;AACbN,EAAAA,IAAI,EAAER,SAAS,CAACe,MAAV,CAAiBC,UADV;AAEbX,EAAAA,OAAO,EAAEL,SAAS,CAACiB,IAAV,CAAeD;AAFX,CAAjB;;AAKA,MAAME,gBAAgB,GAAGC,KAAK,KAAK;AAC/BX,EAAAA,IAAI,EAAEW,KAAK,CAACX;AADmB,CAAL,CAA9B;;AAIA,eAAeP,OAAO,CAACiB,gBAAD,EAAoB;AAACb,EAAAA;AAAD,CAApB,CAAP,CAAsCE,IAAtC,CAAf","sourcesContent":["import React  , {Fragment , useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport Spinner from '../layout/Spinner'\r\nimport PostItem from '../posts/PostItem'\r\nimport CommentForm from '../post/CommentForm'\r\nimport { getPost } from '../../actions/post'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Post = ({ getPost , post: {post , loading} , match }) => {\r\n    useEffect(() => {\r\n        getPost(match.params.id)\r\n    } , [getPost])\r\n    return ( loading || post === null ? <Spinner /> :\r\n        <Fragment>\r\n            <Link to='/posts' className='btn'>\r\n                Back To Posts\r\n            </Link>\r\n            {/* just reusing the component*/}\r\n            <PostItem post={post} showActions={false} />\r\n            <CommentForm postID={post._id}/>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nPost.propTypes = {\r\n    post: PropTypes.object.isRequired,\r\n    getPost: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToPorops = state => ({\r\n    post: state.post\r\n})\r\n\r\nexport default connect(mapStateToPorops , {getPost})(Post)\r\n"]},"metadata":{},"sourceType":"module"}