{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nasser\\\\Desktop\\\\fullstack-projects\\\\dev-connector\\\\client\\\\src\\\\components\\\\profile\\\\Profile.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getProfileById } from '../../actions/profile';\nimport { Link } from 'react-router-dom';\n\nconst Profile = ({\n  getProfileById,\n  profile: {\n    loading,\n    profile\n  },\n  auth,\n  match\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById]);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, profile === null || loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/profiles\",\n    className: \"btn btn-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Back To Profiles\"), // if it is the logged profile\n  auth.isAuthenticated && auth.loading && auth.user._id === profile.user._id && React.createElement(Link, {\n    to: \"/edit-profile\",\n    className: \"btn btn-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Edit Profile\")));\n};\n\nProfile.propTypes = {\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  getProfileById: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);","map":{"version":3,"sources":["C:/Users/Nasser/Desktop/fullstack-projects/dev-connector/client/src/components/profile/Profile.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getProfileById","Link","Profile","profile","loading","auth","match","params","id","isAuthenticated","user","_id","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA2BC,SAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAAQC,cAAR,QAA6B,uBAA7B;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAACF,EAAAA,cAAD;AAAkBG,EAAAA,OAAO,EAAE;AAACC,IAAAA,OAAD;AAAWD,IAAAA;AAAX,GAA3B;AAAiDE,EAAAA,IAAjD;AAAwDC,EAAAA;AAAxD,CAAD,KAAoE;AAChFV,EAAAA,SAAS,CAAC,MAAK;AACXI,IAAAA,cAAc,CAACM,KAAK,CAACC,MAAN,CAAaC,EAAd,CAAd;AACH,GAFQ,EAEL,CAACR,cAAD,CAFK,CAAT;AAIA,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKG,OAAO,KAAK,IAAZ,IAAoBC,OAApB,GAA+B,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA/B,GACA,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,WAAT;AAAqB,IAAA,SAAS,EAAG,eAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADH,EAEK;AACFC,EAAAA,IAAI,CAACI,eAAL,IAAwBJ,IAAI,CAACD,OAA7B,IAAwCC,IAAI,CAACK,IAAL,CAAUC,GAAV,KAAkBR,OAAO,CAACO,IAAR,CAAaC,GAAvE,IACC,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAG,eAAX;AAA2B,IAAA,SAAS,EAAG,cAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,CAFL,CADJ;AAWH,CAhBD;;AAkBAT,OAAO,CAACU,SAAR,GAAoB;AAChBT,EAAAA,OAAO,EAAEN,SAAS,CAACgB,MAAV,CAAiBC,UADV;AAEhBT,EAAAA,IAAI,EAAER,SAAS,CAACgB,MAAV,CAAiBC,UAFP;AAGhBd,EAAAA,cAAc,EAAEH,SAAS,CAACkB,IAAV,CAAeD;AAHf,CAApB;;AAMA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9Bd,EAAAA,OAAO,EAAEc,KAAK,CAACd,OADe;AAE9BE,EAAAA,IAAI,EAAEY,KAAK,CAACd;AAFkB,CAAL,CAA7B;;AAKA,eAAeL,OAAO,CAACkB,eAAD,EAAmB;AAAChB,EAAAA;AAAD,CAAnB,CAAP,CAA4CE,OAA5C,CAAf","sourcesContent":["import React , {Fragment , useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux'\r\nimport Spinner from '../layout/Spinner'\r\nimport {getProfileById} from '../../actions/profile'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Profile = ({getProfileById , profile :{loading , profile} , auth , match}) => {\r\n    useEffect(() =>{\r\n        getProfileById(match.params.id)   \r\n    } , [getProfileById]);\r\n\r\n    return (\r\n        <Fragment>\r\n            {profile === null || loading ? (<Spinner />) : \r\n            (<Fragment>\r\n                <Link to='/profiles' className = 'btn btn-light'>Back To Profiles</Link>\r\n                { // if it is the logged profile\r\n                auth.isAuthenticated && auth.loading && auth.user._id === profile.user._id && \r\n                (<Link to = '/edit-profile' className = 'btn btn-dark'>Edit Profile</Link>)}\r\n            </Fragment>)}\r\n        </Fragment> \r\n    )\r\n}\r\n\r\nProfile.propTypes = {\r\n    profile: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    getProfileById: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile,\r\n    auth: state.profile\r\n})\r\n\r\nexport default connect(mapStateToProps , {getProfileById})(Profile)\r\n"]},"metadata":{},"sourceType":"module"}