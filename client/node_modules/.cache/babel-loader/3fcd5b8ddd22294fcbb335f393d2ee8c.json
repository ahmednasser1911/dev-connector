{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nasser\\\\Desktop\\\\fullstack-projects\\\\dev-connector\\\\client\\\\src\\\\components\\\\profiles\\\\Profiles.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\nimport { getProfiles } from '../../actions/profile';\nimport ProfileItem from './ProfileItem';\nimport Spinner from '../layout/Spinner';\n\nconst Profiles = ({\n  getProfiles,\n  profile: {\n    loading,\n    profiles\n  }\n}) => {\n  useEffect(() => {\n    getProfiles();\n  }, [getProfiles]);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Developers\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fa fa-connectdevelop\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), \" Browse and connect with developers\"), React.createElement(\"div\", {\n    className: \"profiles\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, profiles.length > 0 ? profiles.map(profile => React.createElement(ProfileItem, {\n    key: profile._id,\n    profile: profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })) : React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"No Profiles Found...\"))));\n};\n\nProfiles.propTypes = {\n  profile: PropTypes.object.isRequired,\n  getProfiles: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getProfiles\n})(Profiles);","map":{"version":3,"sources":["C:/Users/Nasser/Desktop/fullstack-projects/dev-connector/client/src/components/profiles/Profiles.js"],"names":["React","Fragment","useEffect","PropTypes","connect","getProfiles","ProfileItem","Spinner","Profiles","profile","loading","profiles","length","map","_id","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA2BC,SAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,WAAR,QAA0B,uBAA1B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACH,EAAAA,WAAD;AAAeI,EAAAA,OAAO,EAAE;AAACC,IAAAA,OAAD;AAAWC,IAAAA;AAAX;AAAxB,CAAD,KAAmD;AAChET,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,WAAW;AACd,GAFQ,EAEL,CAACA,WAAD,CAFK,CAAT;AAGA,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKK,OAAO,GAAI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAJ,GAAmB,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACvB;AAAI,IAAA,SAAS,EAAG,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADuB,EAEvB;AAAG,IAAA,SAAS,EAAG,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAG,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,wCAFuB,EAKvB;AAAK,IAAA,SAAS,EAAG,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,QAAQ,CAACC,MAAT,GAAkB,CAAlB,GAAwBD,QAAQ,CAACE,GAAT,CAAaJ,OAAO,IACzC,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAIA,OAAO,CAACK,GAA5B;AAAkC,IAAA,OAAO,EAAIL,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADqB,CAAxB,GAID;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BALJ,CALuB,CAD/B,CADJ;AAiBH,CArBD;;AAuBAD,QAAQ,CAACO,SAAT,GAAqB;AACjBN,EAAAA,OAAO,EAAEN,SAAS,CAACa,MAAV,CAAiBC,UADT;AAEjBZ,EAAAA,WAAW,EAAEF,SAAS,CAACe,IAAV,CAAeD;AAFX,CAArB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9BX,EAAAA,OAAO,EAAEW,KAAK,CAACX;AADe,CAAL,CAA7B;;AAIA,eAAeL,OAAO,CAACe,eAAD,EAAmB;AAACd,EAAAA;AAAD,CAAnB,CAAP,CAAyCG,QAAzC,CAAf","sourcesContent":["import React , {Fragment , useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from \"react-redux\";\r\nimport {getProfiles} from '../../actions/profile'\r\nimport ProfileItem from './ProfileItem'\r\nimport Spinner from '../layout/Spinner'\r\n\r\nconst Profiles = ({getProfiles , profile: {loading , profiles}}) => {\r\n    useEffect(() => {\r\n        getProfiles();\r\n    } , [getProfiles])\r\n    return (\r\n        <Fragment>\r\n            {loading ? (<Spinner />) : <Fragment>\r\n                <h1 className = \"large text-primary\">Developers</h1>\r\n                <p className = \"lead\">\r\n                    <i className = \"fa fa-connectdevelop\"></i> Browse and connect with developers\r\n                </p>\r\n                <div className = \"profiles\">\r\n                    {profiles.length > 0  ? (profiles.map(profile => (\r\n                        <ProfileItem key = {profile._id}  profile = {profile}/>\r\n                    ))\r\n                    ) : \r\n                    <h4>No Profiles Found...</h4>}\r\n                </div>\r\n            </Fragment>} \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nProfiles.propTypes = {\r\n    profile: PropTypes.object.isRequired,\r\n    getProfiles: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile\r\n})\r\n\r\nexport default connect(mapStateToProps , {getProfiles})(Profiles)\r\n"]},"metadata":{},"sourceType":"module"}