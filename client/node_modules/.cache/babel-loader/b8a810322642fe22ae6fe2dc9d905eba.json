{"ast":null,"code":"import { GET_POSTS, POST_ERROR, UPDATE_LIKES, DELETE_POST } from '../actions/types';\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: false,\n  error: {}\n};\nexport default function (state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case GET_POSTS:\n      return { ...state,\n        posts: payload,\n        loading: false\n      };\n\n    case UPDATE_LIKES:\n      return { ...state,\n        posts: state.posts.map(post => post._id === payload.id ? { ...post,\n          likes: payload.likes\n        } : post),\n        loading: false\n      };\n\n    case DELETE_POST:\n      return { ...state,\n        posts: state.posts.filter(post => post._id !== payload),\n        // remove the post from posts array\n        loading: false\n      };\n\n    case POST_ERROR:\n      return { ...state,\n        error: payload,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/Nasser/Desktop/fullstack-projects/dev-connector/client/src/reducers/post.js"],"names":["GET_POSTS","POST_ERROR","UPDATE_LIKES","DELETE_POST","initialState","posts","post","loading","error","state","action","type","payload","map","_id","id","likes","filter"],"mappings":"AAAA,SACIA,SADJ,EAEIC,UAFJ,EAGIC,YAHJ,EAIIC,WAJJ,QAKO,kBALP;AAOA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,IAAI,EAAE,IAFW;AAGjBC,EAAAA,OAAO,EAAE,KAHQ;AAIjBC,EAAAA,KAAK,EAAE;AAJU,CAArB;AAOA,eAAe,UAASC,KAAK,GAACL,YAAf,EAA8BM,MAA9B,EAAqC;AAChD,QAAM;AAACC,IAAAA,IAAD;AAAQC,IAAAA;AAAR,MAAmBF,MAAzB;;AAEA,UAAQC,IAAR;AACI,SAAKX,SAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHJ,QAAAA,KAAK,EAAEO,OAFJ;AAGHL,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKL,YAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEHJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYQ,GAAZ,CAAgBP,IAAI,IAAIA,IAAI,CAACQ,GAAL,KAAaF,OAAO,CAACG,EAArB,GAA0B,EAAE,GAAGT,IAAL;AAAYU,UAAAA,KAAK,EAAEJ,OAAO,CAACI;AAA3B,SAA1B,GAA+DV,IAAvF,CAFJ;AAGHC,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKJ,WAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEHJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYY,MAAZ,CAAmBX,IAAI,IAAIA,IAAI,CAACQ,GAAL,KAAaF,OAAxC,CAFJ;AAEsD;AACzDL,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKN,UAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHD,QAAAA,KAAK,EAAEI,OAFJ;AAGHL,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ;AACI,aAAOE,KAAP;AA1BR;AA6BH","sourcesContent":["import {\r\n    GET_POSTS,\r\n    POST_ERROR,\r\n    UPDATE_LIKES,\r\n    DELETE_POST\r\n} from '../actions/types'\r\n\r\nconst initialState = {\r\n    posts: [],\r\n    post: null,\r\n    loading: false,\r\n    error: {}\r\n}\r\n\r\nexport default function(state=initialState , action){\r\n    const {type , payload} = action\r\n\r\n    switch (type) {\r\n        case GET_POSTS:\r\n            return {\r\n                ...state,\r\n                posts: payload,\r\n                loading: false\r\n            }\r\n        case UPDATE_LIKES:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.map(post => post._id === payload.id ? { ...post , likes: payload.likes } : post),\r\n                loading: false\r\n            }\r\n        case DELETE_POST: \r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(post => post._id !== payload) ,// remove the post from posts array\r\n                loading: false\r\n            }\r\n        case POST_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}