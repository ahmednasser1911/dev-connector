{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nasser\\\\Desktop\\\\fullstack-projects\\\\dev-connector\\\\client\\\\src\\\\components\\\\profile\\\\Profile.js\";\nimport React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport { getProfileById } from \"../../actions/profile\";\nimport ProfileTop from '../profile/ProfileTop';\nimport ProfileAbout from '../profile/ProfileAbout';\nimport ProfileExperience from '../profile/ProfileExperience';\nimport ProfileEducation from '../profile/ProfileEducation';\nimport ProfileGithub from '../profile/ProfileGithub';\nimport { Link } from \"react-router-dom\";\n\nconst Profile = ({\n  getProfileById,\n  profile: {\n    loading,\n    profile\n  },\n  auth,\n  match\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById, match.params.id]);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, profile === null || loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/profiles\",\n    className: \"btn btn-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Back To Profile\"), auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id ? '' : React.createElement(Link, {\n    to: \"/edit-profile\",\n    className: \"btn btn-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Edit Profile\"), React.createElement(\"div\", {\n    className: \"profile-grid my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(ProfileTop, {\n    profile: profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(ProfileAbout, {\n    profile: profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"profile-exp bg-white p-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Experience\"), profile.experience.length > 0 ? React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, profile.experience.map(exp => React.createElement(ProfileExperience, {\n    key: exp._id,\n    experience: exp,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }))) : React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"No Experience Added\")), React.createElement(\"div\", {\n    className: \"profile-edu bg-white p-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Education\"), profile.education.length > 0 ? React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, profile.education.map(edu => React.createElement(ProfileEducation, {\n    key: edu._id,\n    education: edu,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }))) : React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"No Education Added\")), profile.githubusername && React.createElement(ProfileGithub, {\n    username: profile.githubusername,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }))));\n};\n\nProfile.propTypes = {\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  getProfileById: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);","map":{"version":3,"sources":["C:/Users/Nasser/Desktop/fullstack-projects/dev-connector/client/src/components/profile/Profile.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getProfileById","ProfileTop","ProfileAbout","ProfileExperience","ProfileEducation","ProfileGithub","Link","Profile","profile","loading","auth","match","params","id","isAuthenticated","user","_id","experience","length","map","exp","education","edu","githubusername","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,iBAAP,MAA8B,8BAA9B;AACA,OAAOC,gBAAP,MAA6B,6BAA7B;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AACfP,EAAAA,cADe;AAEfQ,EAAAA,OAAO,EAAE;AAAEC,IAAAA,OAAF;AAAWD,IAAAA;AAAX,GAFM;AAGfE,EAAAA,IAHe;AAIfC,EAAAA;AAJe,CAAD,KAKV;AACJf,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,cAAc,CAACW,KAAK,CAACC,MAAN,CAAaC,EAAd,CAAd;AACD,GAFQ,EAEN,CAACb,cAAD,EAAiBW,KAAK,CAACC,MAAN,CAAaC,EAA9B,CAFM,CAAT;AAIA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,OAAO,KAAK,IAAZ,IAAoBC,OAApB,GACC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAGC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,WAAT;AAAqB,IAAA,SAAS,EAAC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAIGC,IAAI,CAACI,eAAL,IACCJ,IAAI,CAACD,OAAL,KAAiB,KADlB,IAECC,IAAI,CAACK,IAAL,CAAUC,GAAV,KAAkBR,OAAO,CAACO,IAAR,CAAaC,GAFhC,GAEuC,EAFvC,GAGK,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,eAAT;AAAyB,IAAA,SAAS,EAAC,cAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPR,EAWI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAIR,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAIA,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,EAEGA,OAAO,CAACS,UAAR,CAAmBC,MAAnB,GAA4B,CAA5B,GAAiC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAC/BV,OAAO,CAACS,UAAR,CAAmBE,GAAnB,CAAuBC,GAAG,IACzB,oBAAC,iBAAD;AAAmB,IAAA,GAAG,EAAIA,GAAG,CAACJ,GAA9B;AAAmC,IAAA,UAAU,EAAII,GAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAD+B,CAAjC,GAIe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BANlB,CAHF,EAWE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADA,EAEGZ,OAAO,CAACa,SAAR,CAAkBH,MAAlB,GAA2B,CAA3B,GAAgC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAC9BV,OAAO,CAACa,SAAR,CAAkBF,GAAlB,CAAsBG,GAAG,IACxB,oBAAC,gBAAD;AAAkB,IAAA,GAAG,EAAIA,GAAG,CAACN,GAA7B;AAAkC,IAAA,SAAS,EAAIM,GAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAD8B,CAAhC,GAIe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BANlB,CAXF,EAoBGd,OAAO,CAACe,cAAR,IACC,oBAAC,aAAD;AAAe,IAAA,QAAQ,EAAIf,OAAO,CAACe,cAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBJ,CAXJ,CAJJ,CADF;AA+CD,CAzDD;;AA2DAhB,OAAO,CAACiB,SAAR,GAAoB;AAClBhB,EAAAA,OAAO,EAAEX,SAAS,CAAC4B,MAAV,CAAiBC,UADR;AAElBhB,EAAAA,IAAI,EAAEb,SAAS,CAAC4B,MAAV,CAAiBC,UAFL;AAGlB1B,EAAAA,cAAc,EAAEH,SAAS,CAAC8B,IAAV,CAAeD;AAHb,CAApB;;AAMA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCrB,EAAAA,OAAO,EAAEqB,KAAK,CAACrB,OADiB;AAEhCE,EAAAA,IAAI,EAAEmB,KAAK,CAACrB;AAFoB,CAAL,CAA7B;;AAKA,eAAeV,OAAO,CAAC8B,eAAD,EAAkB;AAAE5B,EAAAA;AAAF,CAAlB,CAAP,CAA6CO,OAA7C,CAAf","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport { getProfileById } from \"../../actions/profile\";\r\nimport ProfileTop from '../profile/ProfileTop'\r\nimport ProfileAbout from '../profile/ProfileAbout'\r\nimport ProfileExperience from '../profile/ProfileExperience'\r\nimport ProfileEducation from '../profile/ProfileEducation'\r\nimport ProfileGithub from '../profile/ProfileGithub'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Profile = ({\r\n  getProfileById,\r\n  profile: { loading, profile },\r\n  auth,\r\n  match\r\n}) => {\r\n  useEffect(() => {\r\n    getProfileById(match.params.id);\r\n  }, [getProfileById, match.params.id]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {profile === null || loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <Fragment>\r\n          <Link to=\"/profiles\" className=\"btn btn-light\">\r\n            Back To Profile\r\n          </Link>\r\n          {auth.isAuthenticated &&\r\n            auth.loading === false &&\r\n            auth.user._id === profile.user._id ? ('') : (\r\n                <Link to=\"/edit-profile\" className=\"btn btn-dark\">\r\n                    Edit Profile\r\n                </Link>\r\n            )}\r\n            <div className=\"profile-grid my-1\">\r\n              <ProfileTop profile = {profile}/>\r\n              <ProfileAbout profile = {profile}/>\r\n              <div className=\"profile-exp bg-white p-2\">\r\n              <h2 className=\"text-primary\">Experience</h2>\r\n                {profile.experience.length > 0 ? (<Fragment>\r\n                  {profile.experience.map(exp => (\r\n                    <ProfileExperience key = {exp._id} experience = {exp}/>\r\n                  ))}\r\n                </Fragment>) : (<h4>No Experience Added</h4>)}\r\n              </div>\r\n              <div className=\"profile-edu bg-white p-2\">\r\n              <h2 className=\"text-primary\">Education</h2>\r\n                {profile.education.length > 0 ? (<Fragment>\r\n                  {profile.education.map(edu => (\r\n                    <ProfileEducation key = {edu._id} education = {edu}/>\r\n                  ))}\r\n                </Fragment>) : (<h4>No Education Added</h4>)}\r\n              </div>\r\n\r\n              {profile.githubusername && (\r\n                <ProfileGithub username = {profile.githubusername} />\r\n              )}\r\n\r\n            </div>\r\n\r\n            \r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  getProfileById: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile,\r\n  auth: state.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfileById })(Profile);\r\n"]},"metadata":{},"sourceType":"module"}